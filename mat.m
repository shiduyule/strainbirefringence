syms a1 a3 a6 a5 a4 k;
% matrix6 = [a1,a6,0;
%            a6,a1,0;
%            0,0, a3];
% matrix65 = [a1,a6,a5; 
%            a6, a1, 0;
%            a5, 0, a3];
%matrix654 = [a1,a6,a5; 
%            a6, a1,a4;
%            a5, a4,a3];

matrix654 = [a1,         a6,   0.1 * a6;
             a6,         a1,         0.1 * a6;
            0.1 * a6,   0.1 * a6,         a3];
        
% matrix654 = [a1,         a6,        0  ;
%              a6,       a1,           0     ;
%                0  ,    0  ,         a3];
%            
%            matrix654 = [a1,         a6,   0.01 * a6;
%                      a6,         a1,         0.01 * a6;
%                     0.01 * a6,   0.01 * a6,         a3];

        
% [V6,D6] = eig(matrix6);   %% 使用 MATLAB 中的eig函数来计算给定对称矩阵的特征值（eigenvalues）和对应的特征向量（eigenvectors）
%[V65,D65] = eig(matrix65);  
% eig(matrix6)计算了矩阵matrix6的特征值和特征向量，并将它们分别存储在V6和D6中。其中，V6是特征向量矩阵，D6是对角矩阵，对角线上的元素是矩阵matrix6的特征值。
[V654,D654] = eig(matrix654);   
%%  only consider S6
% disp(D6(1,1));
% disp(D6(2,2));
% disp(D6(3,3));

%%  only consider S6 , S5
% disp(D65(1,1));
% disp(D65(2,2));
% disp(D65(3,3));
%deltabetaD65 = D65(2,2) - D65(3,3);
%disp(deltabetaD65);

%%  consider S6 , S5 , S4
disp(matrix654);
disp(D654)
disp(D654(1,1));
disp(D654(2,2));
disp(D654(3,3));

%%    计算两根之差
deltabetaD654 =D654(3,3) - D654(2,2)  ;
disp(deltabetaD654)     




% %
% (2*a1)/3 + a3/3 - ((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3)/2 - (3^(1/2)*(((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3) - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)/((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3))*1i)/2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)/(2*((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3))
%  
% (2*a1)/3 + a3/3 - ((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3)/2 + (3^(1/2)*(((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3) - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)/((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3))*1i)/2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)/(2*((((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 - (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3)^(1/2) + (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^(1/3))
%  
 

% %% 求一下偏导数
% df_a4 = diff(deltabetaD654, a4);
% df_a5 = diff(deltabetaD654, a5);
% df_a6 = diff(deltabetaD654, a6);
% disp(df_a4);
% disp(df_a5);
% disp(df_a6); 
%% the follow is solution of real problem
%{
-3^(1/2)*
 (
    (
        (   (
                (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6
            )^2 
            - 
            (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3
        )^(1/2) 
        +     
        (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 
        + 
        ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 
        +
        (2*a1 + a3)^3/27 
        +
        a4*a5*a6
        
    )^(1/3) 
        
    -
    
    (   a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 
        +
        (2*a1 + a3)^2/9
    )    
    /
    (
        (
            ((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 
            -
            (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3
        )^(1/2) 
        + 
        (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2    +     ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6    +    (2*a1 + a3)^3/27    +    a4*a5*a6 
    )^(1/3)
)
 *1i
% % 

%%  when a1 = 0.44    a3 = 0.46
a1 = 1; a3 = 2; 
matrix654cc = [a1,a6,a5; a6,a1,a4; a5,a4,a3];
[V,D] = eig(matrix654cc);

% disp(D)

% disp(D(2,2));
% disp(D(3,3));

diff = D(2,2) - D(3,3);
disp(diff); 


-3^(1/2)*
 (
    (
        (   (
                (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6
            )^2 
            - 
            (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3
        )^(1/2) 
        +     
        (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 
        + 
        ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 
        +
        (2*a1 + a3)^3/27 
        +
        a4*a5*a6
        
    )^(1/3) 
        
    -
    
    (   a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 
        +
        (2*a1 + a3)^2/9
    )    
    /
    (
        (
            ((a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2 + ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6 + (2*a1 + a3)^3/27 + a4*a5*a6)^2 
            -
            (a4^2/3 - a1^2/3 - (2*a1*a3)/3 + a5^2/3 + a6^2/3 + (2*a1 + a3)^2/9)^3
        )^(1/2) 
        + 
        (a1^2*a3)/2 - (a1*a4^2)/2 - (a1*a5^2)/2 - (a3*a6^2)/2    +     ((2*a1 + a3)*(- a1^2 - 2*a3*a1 + a4^2 + a5^2 + a6^2))/6    +    (2*a1 + a3)^3/27    +    a4*a5*a6 
    )^(1/3)
)
 *1i

 
-3^(1/2)*
(
    (a4^2/6 + a5^2/6 - a6^2/3          +    ((a4^2/6 + a4*a5*a6 + a5^2/6 - a6^2/3 + 1/27)^2 - (a4^2/3 + a5^2/3 + a6^2/3 + 1/9)^3)^(1/2)         +          a4*a5*a6    +    1/27)^(1/3) 
    - 
    (a4^2/3 + a5^2/3 + a6^2/3 + 1/9)/(a4^2/6 + a5^2/6 - a6^2/3 + ((a4^2/6 + a4*a5*a6 + a5^2/6 - a6^2/3 + 1/27)^2 - (a4^2/3 + a5^2/3 + a6^2/3 + 1/9)^3)^(1/2) + a4*a5*a6 + 1/27)^(1/3))

*1i

%}